# -*- coding: utf-8 -*-
"""GEE_0010_anomaly_mapping.ipynb

utorial Code by Amirhossein Ahrari
YouTube: https://www.youtube.com/@amirhosseinahrarigee
Tutorial Video: Google Earth Engine Tutorial-107: Anomaly Mapping, using Python API (Xee)

This code is part of a tutorial series on Earth Engine programming techniques
presented on the Amirhossein Ahrari YouTube channel. You are free to use and modify
this code for academic and non-academic purposes. Don't forget to subscribe to
the Amirhossein Ahrari channel and follow the videos to support the instructor!

"""

import ee

import xarray as xr
import geopandas as gpd
import matplotlib.pyplot as plt

!pip install xee

import xee

ee.Authenticate()
ee.Initialize(project = 'ee-amirhosseinahrari', opt_url='https://earthengine-highvolume.googleapis.com')

sm  = ee.ImageCollection("IDAHO_EPSCOR/TERRACLIMATE").select('soil').filterDate('2000', '2024')

sm_ds = xr.open_dataset(sm, engine = 'ee')

sm_ds

sm_annual = sm_ds.resample(time = 'YE').mean('time') * 0.1

sm_annual

sm_mean = sm_annual.mean('time')

sm_mean

sm_mean['soil'].plot(x = 'lon', y = 'lat', cmap = 'jet', figsize = (7,4), vmin = 10, vmax = 100)
plt.savefig('sm_mean.png', dpi = 360)

anomaly = sm_annual - sm_mean

anomaly

shp = gpd.read_file('/content/World_Countries_Generalized.shp')

shp

shp.crs

countries = shp.to_crs('EPSG:4326')

countries.crs

sub = anomaly.sel(lon = slice(0,180), lat = slice(0,90), time  = '2020-12-31')

fig, ax = plt.subplots(figsize = (9,4))
sub['soil'].plot(x = 'lon', y = 'lat', cmap = 'coolwarm_r', vmin = -10, vmax = 10, ax = ax)
countries.boundary.plot(ax = ax, lw = 1, color = 'black')

plt.savefig('sm_anomaly.png', dpi = 360)
