# -*- coding: utf-8 -*-
"""GEE_0016_sen_slope.ipynb

utorial Code by Amirhossein Ahrari
YouTube: https://www.youtube.com/@amirhosseinahrarigee
Tutorial Video: Google Earth Engine Tutorial-113: Sen Slope Trend Analysis, using Python API (Xee)

This code is part of a tutorial series on Earth Engine programming techniques
presented on the Amirhossein Ahrari YouTube channel. You are free to use and modify
this code for academic and non-academic purposes. Don't forget to subscribe to
the Amirhossein Ahrari channel and follow the videos to support the instructor


"""

import ee
import geemap as gee
import xarray as xr

!pip install xee
import xee

ee.Authenticate()
ee.Initialize(project = 'ee-amirhosseinahrari', opt_url = 'https://earthengine-highvolume.googleapis.com')

collection = ee.ImageCollection("ECMWF/ERA5/MONTHLY").select('mean_2m_air_temperature').filterDate('2000','2024')

map = gee.Map(basemap = 'SATELLITE')
map

roi = map.draw_last_feature.geometry()

ds = xr.open_dataset(collection, engine = 'ee', crs = 'EPSG:4326', scale = 0.27, geometry = roi)

ds

annual = ds.resample(time = 'YE').mean('time')

annual

annual.mean_2m_air_temperature.plot(x = 'lon', y = 'lat', cmap = 'jet', robust = True, col = 'time', col_wrap =7)

!pip install pymannkendall
import pymannkendall as mk

import numpy as np

def sen_fun(img):
  clean = img[~np.isnan(img)]
  return mk.original_test(clean).slope

sen_slope_map = xr.apply_ufunc(
    sen_fun,
    ds.mean_2m_air_temperature,
    input_core_dims = [['time']],
    output_dtypes = [float],
    vectorize = True,
    dask = 'allows'

)

sen_slope_map

sen_slope_map.plot(x = 'lon', y = 'lat', robust = True)
