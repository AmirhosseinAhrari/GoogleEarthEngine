
"""GEE_0019_precipitaion_forecast.ipynb

Tutorial Code by Amirhossein Ahrari
YouTube: https://www.youtube.com/@amirhosseinahrarigee
Tutorial Video: Google Earth Engine Tutorial-116: Precipitation Forecast, using Python API (Xee)

This code is part of a tutorial series on Earth Engine programming techniques
presented on the Amirhossein Ahrari YouTube channel. You are free to use and modify
this code for academic and non-academic purposes. Don't forget to subscribe to
the Amirhossein Ahrari channel and follow the videos to support the instructor

"""



import ee
import geemap as gee
import xarray as xr

!pip install xee
import xee

ee.Authenticate()
ee.Initialize(project = 'ee-amirhosseinahrari', opt_url = 'https://earthengine-highvolume.googleapis.com')

map = gee.Map(basemap = 'SATELLITE')
map

roi = map.draw_last_feature.geometry()

collection = ee.ImageCollection("NOAA/PERSIANN-CDR").filterDate('2005','2024')

ds = xr.open_dataset(collection, engine = 'ee', crs = 'EPSG:4326', geometry = roi, scale = 0.27)

ds

ds_mean = ds.mean('time')

ds_mean

ds_mean.precipitation.plot(x = 'lon', y = 'lat', robust = True)

ds_var = ds.var('time')

ds_var.precipitation.plot(x = 'lon', y = 'lat', robust = True)

monthly = ds.resample(time = 'M').sum()

monthly

point = monthly.sel(lon = 48.73310048088049, lat = 31.808809525085334, method ='nearest')

point

df = point.to_dataframe()['precipitation']

df

df.plot()

from statsmodels.tsa.statespace.sarimax import SARIMAX

model = SARIMAX(df, order = (1,1,1), seasonal_order = (1,1,0,48)) # this gives a better result
result = model.fit()

forecast = result.get_forecast(steps = 10 * 12)

df.plot()
forecast.predicted_mean.plot()

forecast.predicted_mean.to_csv('pr_forecasted.csv')
