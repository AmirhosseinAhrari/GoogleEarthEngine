
/*
Tutorial Code by Amirhossein Ahrari
YouTube: https://www.youtube.com/@amirhosseinahrarigee
Tutorial Video: Google Earth Engine Tutorial-98: Radar Vegetation Index, using Sentinel-1

This code is part of a tutorial series on Earth Engine programming techniques
presented on the Amirhossein Ahrari YouTube channel. You are free to use and modify
this code for academic and non-academic purposes. Don't forget to subscribe to
the Amirhossein Ahrari channel and follow the videos to support the instructor!
*/


var cor1 = [
  [48.56720223518666,30.971560313909215], 
  [48.67294564338979,30.971560313909215],
  [48.67294564338979,31.05689022733218],
  [48.56720223518666,31.05689022733218],
  [48.56720223518666,30.971560313909215]
  ]

var geometry = ee.Geometry.Polygon(cor1)


Map.centerObject(geometry)

var sen1 = ee.ImageCollection("COPERNICUS/S1_GRD")
.filterDate('2020','2024')
.filterBounds(geometry)
.filter(ee.Filter.listContains('transmitterReceiverPolarisation','VV'))
.filter(ee.Filter.listContains('transmitterReceiverPolarisation','VH'))
.filter(ee.Filter.eq('instrumentMode', 'IW'))
.filter(ee.Filter.eq('orbitProperties_pass', 'ASCENDING'))
.select('VV','VH')


print(sen1)
// print(sen1.aggregate_array('orbitProperties_pass').distinct())


var rvi = sen1.map(function(img){
  var sigma = ee.Image(10).pow(img.divide(10))
  var index = sigma.expression('(4 * vh)/(vh + vv)',{
    'vv': sigma.select('VV'), 'vh': sigma.select('VH')
    }).rename('RVI')
  var smooth = index.focalMedian(30, 'square', 'meters')
  return smooth
  .copyProperties(img, ['system:time_start', 'system:time_end'])
  })

Map.addLayer(rvi.mean().clip(geometry),[],'rvi', false)


var cor2 = [
  [48.60672309490827,31.022718037607426],
  [48.609040523497136,31.02212960598332],
  [48.61316039654401,31.03220599571869], 
  [48.61084296795514,31.03286791101548], 
  [48.60672309490827,31.022718037607426]
  ]

var geometry2 = ee.Geometry.Polygon(cor2)



print(
  ui.Chart.image.series(rvi, geometry2, ee.Reducer.mean(), 10, 'system:time_start')
  )

print(
  ui.Chart.image.series(sen1, geometry2, ee.Reducer.mean(), 10, 'system:time_start')
  )

Map.addLayer(rvi.filterDate('2023','2024').toBands().clip(geometry),[],'rvi2023', false)


Export.image.toDrive({
  image: rvi.filterDate('2023','2024').toBands().clip(geometry), 
  description: 'rvi', 
  region: geometry, 
  scale: 30, 
  crs: 'EPSG:4326', 
  folder: 'test', 
  maxPixels: 1e13
  
  })
